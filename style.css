* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Kumbh Sans", sans-serif;
  font-size: 12px;
}

main {
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: rgb(101, 101, 231);
  background: linear-gradient(0deg, rgb(101, 101, 231) 0%, rgb(175, 103, 233) 100%);
}

.wrapper {
  width: 65%;
  height: 70%;
  background-color: hsl(0deg, 0%, 100%);
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 1rem;
  box-shadow: 0rem 1.4rem 3rem -1.5rem rgba(0, 0, 0, 0.6);
}

.illustration {
  width: 50%;
  height: 100%;
  position: relative;
}
.illustration .inside, .illustration .outside {
  height: 100%;
  width: 100%;
}
.illustration .inside {
  overflow: hidden;
  position: relative;
}
.illustration .inside .woman {
  position: absolute;
  top: 18%;
  left: -16%;
  z-index: 1;
}
.illustration .inside .pattern {
  position: absolute;
  top: -53%;
  left: -115%;
  z-index: 0;
}
.illustration .outside {
  position: absolute;
  top: 0;
}
.illustration .outside .box {
  position: absolute;
  top: 44%;
  left: -18%;
  z-index: 2;
}

.faq-info {
  width: 50%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
}
.faq-info h1 {
  margin-bottom: 1rem;
  font-size: 2rem;
}

.questions {
  width: 80%;
  height: 55%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: flex-start;
  text-align: left;
}

.question-wrapper {
  width: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  border-bottom: 1px solid hsl(240deg, 5%, 91%);
}

input {
  display: none;
}

.question {
  font-weight: 400;
  font-size: 1rem;
  margin: 1rem 0;
}
.question:hover {
  color: hsl(14deg, 88%, 65%);
  cursor: pointer;
}
.question::after {
  content: url(./images/icon-arrow-down.svg);
  height: 1rem;
  position: absolute;
  top: 30%;
  right: 5%;
  transition: transform 0.5s;
}

input:checked ~ .question-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

input:checked ~ .question {
  font-weight: 700;
}

input:checked ~ .question::after {
  rotate: x 180deg;
}

input:checked ~ .answer {
  display: block;
}

.answer {
  width: 80%;
  margin-bottom: 1rem;
  display: none;
}

.attribution {
  font-size: 11px;
  text-align: center;
  position: absolute;
  bottom: 0;
}

.attribution a {
  color: white;
  text-decoration: none;
}

@media (max-width: 1024px) {
  .wrapper {
    width: 85%;
    height: 80%;
  }
  .illustration .inside .pattern {
    left: -130%;
  }
}
@media (max-width: 768px) {
  .wrapper {
    width: 90%;
    height: 80%;
  }
  .illustration .inside .woman {
    height: 50%;
    top: 30%;
    left: -10%;
  }
  .illustration .inside .pattern {
    height: 170%;
    top: -40%;
    left: -175%;
  }
  .illustration .outside .box {
    width: 40%;
    top: 50%;
    left: -13%;
  }
  .faq-info .questions {
    width: 95%;
  }
}
@media (max-width: 600px) {
  .wrapper {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    height: 75%;
    margin-top: 4rem;
  }
  .illustration {
    width: 100%;
    height: 20%;
  }
  .illustration .inside {
    overflow: visible;
  }
  .illustration .inside .woman {
    width: 50%;
    height: auto;
    left: 25%;
    top: -80%;
  }
  .illustration .inside .pattern {
    width: 50%;
    height: auto;
    left: 25%;
    top: 5%;
  }
  .illustration .outside .box {
    display: none;
  }
  .faq-info {
    width: 90%;
    height: 80%;
    justify-content: flex-start;
    margin-bottom: 1rem;
  }
  .faq-info * {
    margin: 0;
  }
  .faq-info h1 {
    width: 100%;
    text-align: center;
  }
  .faq-info .questions {
    width: 100%;
    height: 80%;
    justify-content: flex-start;
  }
  .question {
    font-size: 0.9rem;
    margin: 1rem 0;
  }
  .answer {
    font-size: 0.7rem;
    margin-bottom: 1rem;
  }
}/*# sourceMappingURL=style.css.map */